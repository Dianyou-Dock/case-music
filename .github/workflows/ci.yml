name: Conditional CI Workflow

on:
  push:
    paths:
      - 'core/src/**'       # 如果 core/src 文件夹发生变更
      - 'core/backend/**'        # 如果 backend 文件夹发生变更
  pull_request:
    paths:
      - 'core/src/**'
      - 'core/backend/**'

jobs:
  pnpm:
    if: contains(github.event.pull_request.changed_files, 'core/src/') || contains(github.event.push.changed_files, 'core/src/')
    name: Run pnpm CI
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache pnpm dependencies
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('core/package-lock.json', 'core/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Install Node.js and pnpm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      # Install dependencies and run tests
      - name: Install dependencies
        working-directory: core
        run: pnpm install

      - name: Run pnpm tests
        working-directory: core
        run: pnpm test

  rust:
    if: contains(github.event.pull_request.changed_files, 'core/backend/') || contains(github.event.push.changed_files, 'core/backend/')
    name: Run Rust CI
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache Cargo dependencies
      - name: Setup Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Setup Rust
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      # Run tests
      - name: Run Rust tests
        working-directory: backend
        run: cargo test
