name: Conditional CI Workflow

on:
  push:
    paths:
      - 'core/src/**'
      - 'core/backend/**'
  pull_request:
    paths:
      - 'core/src/**'
      - 'core/backend/**'

jobs:
  pnpm:
    name: Run pnpm CI
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache pnpm dependencies
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('core/package-lock.json', 'core/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Install Node.js and pnpm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install pnpm
        run: npm install -g pnpm

      # Install dependencies and run tests
      - name: Install dependencies
        working-directory: core
        run: pnpm install

      - name: Run pnpm build
        working-directory: core
        run: pnpm build

  rust:
    name: Run Rust CI
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install system dependencies for gdk-3.0
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl wget file libxdo-dev libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev libjavascriptcoregtk-4.0-dev pkg-config libsoup-3.0-dev

      # Cache Cargo dependencies
      - name: Setup Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Setup Rust
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      # Run build
      - name: Run Rust build
        working-directory: core/backend
        run: cargo build
